name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools_scm

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-test:
    if: github.event.inputs.test_pypi == 'true'
    needs: build
    runs-on: ubuntu-latest
    environment: test-pypi

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    environment: pypi

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  create-release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: publish
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Get tag name
      id: get_tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_tag.outputs.TAG_NAME }}
        release_name: Release ${{ steps.get_tag.outputs.TAG_NAME }}
        body: |
          ## What's Changed
          
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
          
          ## Installation
          
          ```bash
          pip install docling-enhanced==${{ steps.get_tag.outputs.TAG_NAME }}
          ```
          
          ## Quick Start
          
          ```python
          from docling_enhanced import EnhancedModelFactory
          from docling.datamodel.accelerator_options import AcceleratorOptions
          
          # Create factory with ONNX auto-detection
          factory = EnhancedModelFactory(AcceleratorOptions())
          
          # Create enhanced models
          layout_model = factory.create_layout_model()
          table_model = factory.create_table_model()
          ```
        draft: false
        prerelease: ${{ contains(steps.get_tag.outputs.TAG_NAME, 'a') || contains(steps.get_tag.outputs.TAG_NAME, 'b') || contains(steps.get_tag.outputs.TAG_NAME, 'rc') }}